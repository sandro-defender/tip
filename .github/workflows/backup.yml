name: Backup Changed JSON Files

on:
  push:
    paths:
      - "*.json"  # აკონტროლებს მხოლოდ .json ფაილების ცვლილებებს

jobs:
  backup:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # საჭიროა რეპოზიტორიაში ცვლილებების შესატანად

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # უზრუნველყოფს სრული გიტ ისტორიის მიღებას

      - name: Get list of changed JSON files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            *.json

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Backup changed JSON files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            # ამოიღეთ ფაილის სახელი გაფართოების გარეშე
            filename=$(basename "$file" .json)
            # ამოიღეთ თვე ფაილის სახელიდან
            file_month=$(echo $filename | cut -d '-' -f 2)
            # ამოიღეთ მიმდინარე თვე
            current_month=$(date +"%m")
            # თუ ფაილის თვე არ ემთხვევა მიმდინარე თვეს, შექმენით ახალი საქაღალდე
            if [ "$file_month" != "$current_month" ]; then
              TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
              mkdir -p backups/$TIMESTAMP
              cp "$file" "backups/$TIMESTAMP/${filename}_backup.json"
            else
              # თუ თვე ემთხვევა, უბრალოდ დააკოპირეთ ფაილი ახალი სახელით
              cp "$file" "${filename}_backup.json"
            fi
          done
          git add .
          git commit -m "Backup of changed JSON files"
          git push
